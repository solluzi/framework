<?php
declare(strict_types=1);
namespace Solluzi\Database\Traits;

trait SqlLastId
{
    use DbConnection;

    public function lastId($primaryKey): int
    {
        /*
        |----------------------------------------------------------------------------------------------
        | sql
        |----------------------------------------------------------------------------------------------
        |
        | query to get max id from given table
        |
        */
        $sql = "SELECT MAX(".$primaryKey.") AS max FROM " . $this->table.';';
        /*
        |----------------------------------------------------------------------------------------------
        | connect
        |----------------------------------------------------------------------------------------------
        |
        | try to grant database connection
        |
        */
        $this->connect();

        /*
        |----------------------------------------------------------------------------------------------
        | conn
        |----------------------------------------------------------------------------------------------
        |
        | if connected in database
        |
        */
        if($this->conn)
        {
            
            try {
                $sql .= ";";
                /*
                |----------------------------------------------------------------------------------------------
                | beginTransaction
                |----------------------------------------------------------------------------------------------
                |
                | begin the sql transaction in the table
                |
                */
                $this->beginTransaction();
                /*
                |----------------------------------------------------------------------------------------------
                | prepare & execute
                |----------------------------------------------------------------------------------------------
                |
                | run the sql in the table
                |
                */
                $instruction = $this->conn->prepare($sql);
                $instruction->execute();
                /*
                |----------------------------------------------------------------------------------------------
                | result
                |----------------------------------------------------------------------------------------------
                |
                | gets result from table
                |
                */
                $result      = $instruction->fetchObject();
                /*
                |----------------------------------------------------------------------------------------------
                | dbClose
                |----------------------------------------------------------------------------------------------
                |
                | close database connection
                |
                */
                $this->close();
                /*
                |----------------------------------------------------------------------------------------------
                | return
                |----------------------------------------------------------------------------------------------
                |
                | sums 1 to result and retun to API
                |
                */
                return $result->max + 1;
            } catch (\Exception $e) {
                /*
                |-------------------------------------------------------------------------------------
                | roolback
                |-------------------------------------------------------------------------------------
                |
                | if ocurs any error, all request are undone
                |
                */
                $this->rollback();
                /*
                |-------------------------------------------------------------------------------------
                | Exception
                |-------------------------------------------------------------------------------------
                |
                | throws sql error
                |
                */
                throw new \Exception($e->getMessage());
            }
            
        }else{
            /*
            |----------------------------------------------------------------------------------------
            | Exception
            |----------------------------------------------------------------------------------------
            |
            | if connection not granted, returns this message
            |
            */
            throw new \Exception("No active connection!!");
        }
    }
}