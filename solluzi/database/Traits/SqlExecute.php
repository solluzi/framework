<?php
declare(strict_types=1);
namespace Solluzi\Database\Traits;

/**
 * 
 */
trait SqlExecute
{
    use DbConnection;
     /**
     * execute method
     *  runs the plain sql struction given
     *  it only accepts select or delete instructions
     *
     * @return integer
     */
    public function execute(): void
    {
        /*
        |----------------------------------------------------------------------------------------------
        | query
        |----------------------------------------------------------------------------------------------
        |
        | gets the query objects to a variabes
        |
        */
        $query = $this->query;

        /*
        |----------------------------------------------------------------------------------------------
        | base
        |----------------------------------------------------------------------------------------------
        |
        | Gets the base query instruction into sql variable
        |
        */
        $sql   = $query->base;

        /*
        |----------------------------------------------------------------------------------------------
        | where
        |----------------------------------------------------------------------------------------------
        |
        | Verifies if has where clause
        |
        */
        if(!empty($query->where)){
            $sql .= " WHERE " . implode(' AND ', $query->where);
        }

        /*
        |----------------------------------------------------------------------------------------------
        | orwhere
        |----------------------------------------------------------------------------------------------
        |
        | Verifies if has or where clause in query
        |
        */
        if(!empty($query->orWhere)){
            $sql .= implode(' ',$query->orWhere);
        }

        /*
        |----------------------------------------------------------------------------------------------
        | having
        |----------------------------------------------------------------------------------------------
        |
        | Verifies if has having clause in sql request
        |
        */
        if(!empty($query->having)){
            $sql .= $query->having;
        }

        /*
        |----------------------------------------------------------------------------------------------
        | between
        |----------------------------------------------------------------------------------------------
        |
        | Verifies if has between clause in sql request
        |
        */
        if(!empty($query->between)){
            $sql .= $query->between;
        }

        /*
        |----------------------------------------------------------------------------------------------
        | connection method
        |----------------------------------------------------------------------------------------------
        |
        | open connection to a given SGBD
        |
        */
        $this->connect();

        /*
        |----------------------------------------------------------------------------------------------
        | conn
        |----------------------------------------------------------------------------------------------
        |
        | verifies if access is granted
        |
        */
        if($this->conn)
        {
            /*
            |------------------------------------------------------------------------------------------
            | Try to execute query
            |------------------------------------------------------------------------------------------
            |
            | Verifies if has between clause in sql request
            |
            */
            try {
                $sql .= ";";
                /*
                |-------------------------------------------------------------------------------------
                | beginTransaction
                |-------------------------------------------------------------------------------------
                |
                | As the name sugests, it begins a database transaction
                |
                */
                $this->beginTransaction();
                /*
                |-------------------------------------------------------------------------------------
                | prepare && execute
                |-------------------------------------------------------------------------------------
                |
                | Executes a sql transaction in database
                |
                */
                $instruction = $this->conn->prepare($sql);
                $instruction->execute($this->values);

                /*
                |-------------------------------------------------------------------------------------
                | commit
                |-------------------------------------------------------------------------------------
                |
                | commits the sql instruction in database
                |
                */
                $this->commit();

                /*
                |-------------------------------------------------------------------------------------
                | dbClose
                |-------------------------------------------------------------------------------------
                |
                | closes database connection
                |
                */
                $this->close();
            } catch (\Exception $e) {
                /*
                |-------------------------------------------------------------------------------------
                | roolback
                |-------------------------------------------------------------------------------------
                |
                | if ocurs any error, all request are undone
                |
                */
                $this->rollback();

                /*
                |-------------------------------------------------------------------------------------
                | Exception
                |-------------------------------------------------------------------------------------
                |
                | throws sql error
                |
                */
                throw new \Exception($e->getMessage());
            }
            
        }else{
            /*
            |----------------------------------------------------------------------------------------
            | Exception
            |----------------------------------------------------------------------------------------
            |
            | if connection not granted, returns this message
            |
            */
            throw new \Exception("No active connection!!");
        }
    }
}
